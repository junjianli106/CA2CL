nohup: ignoring input
12/21/2023 12:35:21 - INFO - __main__ - 设置 seed 为:  1
12/21/2023 12:35:21 - INFO - __main__ - Start fine-turning...
12/21/2023 12:35:26 - INFO - __main__ - ==========Epoch:0==========
=> no checkpoint found at '
12/21/2023 12:37:24 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:37:24 - INFO - utils.common - F1score = 0.655006839004488
12/21/2023 12:37:24 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:37:24 - INFO - utils.common - acc = 0.66645
12/21/2023 12:37:24 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:37:24 - INFO - utils.common - precision = 0.6700136942815682
12/21/2023 12:37:24 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:37:24 - INFO - utils.common - result = {'f1score': 0.655006839004488, 'acc': 0.66645, 'precision': 0.6700136942815682, 'recall': 0.6563254747989631}
12/21/2023 12:37:24 - INFO - __main__ - Epoch:0, Train Accuracy:0.66645, f1:0.655006839004488

Epoch: [0][0/313]	
Epoch: [0][100/313]	
Epoch: [0][200/313]	
Epoch: [0][300/313]	
12/21/2023 12:37:46 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:37:46 - INFO - utils.common - F1score = 0.8931348022832049
12/21/2023 12:37:46 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:37:46 - INFO - utils.common - acc = 0.8942
12/21/2023 12:37:46 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:37:46 - INFO - utils.common - precision = 0.9036325696838825
12/21/2023 12:37:46 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:37:46 - INFO - utils.common - result = {'f1score': 0.8931348022832049, 'acc': 0.8942, 'precision': 0.9036325696838825, 'recall': 0.8890340316814265}
12/21/2023 12:37:46 - INFO - __main__ - Epoch:0, Val Accuracy:0.8942, f1:0.8931348022832049

12/21/2023 12:37:46 - INFO - __main__ - lr:0.00027135636881635457
12/21/2023 12:37:46 - INFO - __main__ - ==========Epoch:1==========
Save best weights
12/21/2023 12:39:55 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:39:55 - INFO - utils.common - F1score = 0.8455599080359879
12/21/2023 12:39:55 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:39:55 - INFO - utils.common - acc = 0.8487
12/21/2023 12:39:55 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:39:56 - INFO - utils.common - precision = 0.8474893693426555
12/21/2023 12:39:56 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:39:56 - INFO - utils.common - result = {'f1score': 0.8455599080359879, 'acc': 0.8487, 'precision': 0.8474893693426555, 'recall': 0.8449448978104281}
12/21/2023 12:39:56 - INFO - __main__ - Epoch:1, Train Accuracy:0.8487, f1:0.8455599080359879

Epoch: [1][0/313]	
Epoch: [1][100/313]	
Epoch: [1][200/313]	
Epoch: [1][300/313]	
12/21/2023 12:40:19 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:40:19 - INFO - utils.common - F1score = 0.928796922233816
12/21/2023 12:40:19 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:40:19 - INFO - utils.common - acc = 0.92955
12/21/2023 12:40:19 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:40:19 - INFO - utils.common - precision = 0.9329357552490222
12/21/2023 12:40:19 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:40:20 - INFO - utils.common - result = {'f1score': 0.928796922233816, 'acc': 0.92955, 'precision': 0.9329357552490222, 'recall': 0.9261515696433325}
12/21/2023 12:40:20 - INFO - __main__ - Epoch:1, Val Accuracy:0.92955, f1:0.928796922233816

12/21/2023 12:40:20 - INFO - __main__ - lr:0.0001963663688163546
12/21/2023 12:40:20 - INFO - __main__ - ==========Epoch:2==========
Save best weights
12/21/2023 12:42:27 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:42:27 - INFO - utils.common - F1score = 0.8731141880535219
12/21/2023 12:42:27 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:42:27 - INFO - utils.common - acc = 0.875175
12/21/2023 12:42:27 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:42:28 - INFO - utils.common - precision = 0.8743148491251286
12/21/2023 12:42:28 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:42:28 - INFO - utils.common - result = {'f1score': 0.8731141880535219, 'acc': 0.875175, 'precision': 0.8743148491251286, 'recall': 0.8725028607292667}
12/21/2023 12:42:28 - INFO - __main__ - Epoch:2, Train Accuracy:0.875175, f1:0.8731141880535219

Epoch: [2][0/313]	
Epoch: [2][100/313]	
Epoch: [2][200/313]	
Epoch: [2][300/313]	
12/21/2023 12:42:50 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:42:50 - INFO - utils.common - F1score = 0.9410020561977217
12/21/2023 12:42:50 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:42:50 - INFO - utils.common - acc = 0.9416
12/21/2023 12:42:50 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:42:50 - INFO - utils.common - precision = 0.9439984593141655
12/21/2023 12:42:50 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:42:50 - INFO - utils.common - result = {'f1score': 0.9410020561977217, 'acc': 0.9416, 'precision': 0.9439984593141655, 'recall': 0.9388258833348276}
12/21/2023 12:42:50 - INFO - __main__ - Epoch:2, Val Accuracy:0.9416, f1:0.9410020561977217

12/21/2023 12:42:50 - INFO - __main__ - lr:0.0001036736311836454
12/21/2023 12:42:50 - INFO - __main__ - ==========Epoch:3==========
Save best weights
12/21/2023 12:44:55 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:44:56 - INFO - utils.common - F1score = 0.8825698511318021
12/21/2023 12:44:56 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:44:56 - INFO - utils.common - acc = 0.884475
12/21/2023 12:44:56 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:44:56 - INFO - utils.common - precision = 0.8834463843124247
12/21/2023 12:44:56 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:44:56 - INFO - utils.common - result = {'f1score': 0.8825698511318021, 'acc': 0.884475, 'precision': 0.8834463843124247, 'recall': 0.882095448159598}
12/21/2023 12:44:56 - INFO - __main__ - Epoch:3, Train Accuracy:0.884475, f1:0.8825698511318021

Epoch: [3][0/313]	
Epoch: [3][100/313]	
Epoch: [3][200/313]	
Epoch: [3][300/313]	
12/21/2023 12:45:19 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:45:19 - INFO - utils.common - F1score = 0.9449999097011155
12/21/2023 12:45:19 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:45:19 - INFO - utils.common - acc = 0.9456
12/21/2023 12:45:19 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:45:19 - INFO - utils.common - precision = 0.9470726085753292
12/21/2023 12:45:19 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:45:19 - INFO - utils.common - result = {'f1score': 0.9449999097011155, 'acc': 0.9456, 'precision': 0.9470726085753292, 'recall': 0.9433669303945253}
12/21/2023 12:45:19 - INFO - __main__ - Epoch:3, Val Accuracy:0.9456, f1:0.9449999097011155

12/21/2023 12:45:19 - INFO - __main__ - lr:2.8683631183645395e-05
12/21/2023 12:45:19 - INFO - __main__ - ==========Epoch:4==========
Save best weights
12/21/2023 12:47:20 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:47:20 - INFO - utils.common - F1score = 0.8873776236567638
12/21/2023 12:47:20 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:47:21 - INFO - utils.common - acc = 0.8891
12/21/2023 12:47:21 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:47:21 - INFO - utils.common - precision = 0.8883539375107586
12/21/2023 12:47:21 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:47:21 - INFO - utils.common - result = {'f1score': 0.8873776236567638, 'acc': 0.8891, 'precision': 0.8883539375107586, 'recall': 0.8867880879758773}
12/21/2023 12:47:21 - INFO - __main__ - Epoch:4, Train Accuracy:0.8891, f1:0.8873776236567638

Epoch: [4][0/313]	
Epoch: [4][100/313]	
Epoch: [4][200/313]	
Epoch: [4][300/313]	
12/21/2023 12:47:46 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:47:46 - INFO - utils.common - F1score = 0.9437952241377842
12/21/2023 12:47:46 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:47:46 - INFO - utils.common - acc = 0.9442
12/21/2023 12:47:46 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:47:47 - INFO - utils.common - precision = 0.9459276351322501
12/21/2023 12:47:47 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:47:47 - INFO - utils.common - result = {'f1score': 0.9437952241377842, 'acc': 0.9442, 'precision': 0.9459276351322501, 'recall': 0.9421934673219925}
12/21/2023 12:47:47 - INFO - __main__ - Epoch:4, Val Accuracy:0.9442, f1:0.9437952241377842

12/21/2023 12:47:47 - INFO - __main__ - lr:0.0003
12/21/2023 12:47:47 - INFO - __main__ - ==========Epoch:5==========
early_st 4
12/21/2023 12:49:50 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:49:50 - INFO - utils.common - F1score = 0.8962248190049495
12/21/2023 12:49:50 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:49:51 - INFO - utils.common - acc = 0.897675
12/21/2023 12:49:51 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:49:51 - INFO - utils.common - precision = 0.8972752912244426
12/21/2023 12:49:51 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:49:51 - INFO - utils.common - result = {'f1score': 0.8962248190049495, 'acc': 0.897675, 'precision': 0.8972752912244426, 'recall': 0.8955861740315382}
12/21/2023 12:49:51 - INFO - __main__ - Epoch:5, Train Accuracy:0.897675, f1:0.8962248190049495

Epoch: [5][0/313]	
Epoch: [5][100/313]	
Epoch: [5][200/313]	
Epoch: [5][300/313]	
12/21/2023 12:50:17 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:50:17 - INFO - utils.common - F1score = 0.9525860740383322
12/21/2023 12:50:17 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:50:17 - INFO - utils.common - acc = 0.9529
12/21/2023 12:50:17 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:50:18 - INFO - utils.common - precision = 0.9530869554462242
12/21/2023 12:50:18 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:50:18 - INFO - utils.common - result = {'f1score': 0.9525860740383322, 'acc': 0.9529, 'precision': 0.9530869554462242, 'recall': 0.9523261760294898}
12/21/2023 12:50:18 - INFO - __main__ - Epoch:5, Val Accuracy:0.9529, f1:0.9525860740383322

12/21/2023 12:50:18 - INFO - __main__ - lr:0.00027135636881635457
12/21/2023 12:50:18 - INFO - __main__ - ==========Epoch:6==========
Save best weights
12/21/2023 12:52:29 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:52:29 - INFO - utils.common - F1score = 0.9036013855382128
12/21/2023 12:52:29 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:52:29 - INFO - utils.common - acc = 0.904975
12/21/2023 12:52:29 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:52:29 - INFO - utils.common - precision = 0.9042281359990371
12/21/2023 12:52:29 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:52:30 - INFO - utils.common - result = {'f1score': 0.9036013855382128, 'acc': 0.904975, 'precision': 0.9042281359990371, 'recall': 0.9031477203555666}
12/21/2023 12:52:30 - INFO - __main__ - Epoch:6, Train Accuracy:0.904975, f1:0.9036013855382128

Epoch: [6][0/313]	
Epoch: [6][100/313]	
Epoch: [6][200/313]	
Epoch: [6][300/313]	
12/21/2023 12:52:54 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:52:54 - INFO - utils.common - F1score = 0.9580222706771414
12/21/2023 12:52:54 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:52:55 - INFO - utils.common - acc = 0.9584
12/21/2023 12:52:55 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:52:55 - INFO - utils.common - precision = 0.9587337998122436
12/21/2023 12:52:55 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:52:55 - INFO - utils.common - result = {'f1score': 0.9580222706771414, 'acc': 0.9584, 'precision': 0.9587337998122436, 'recall': 0.9575121213670627}
12/21/2023 12:52:55 - INFO - __main__ - Epoch:6, Val Accuracy:0.9584, f1:0.9580222706771414

12/21/2023 12:52:55 - INFO - __main__ - lr:0.0001963663688163546
12/21/2023 12:52:55 - INFO - __main__ - ==========Epoch:7==========
Save best weights
12/21/2023 12:54:56 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:54:57 - INFO - utils.common - F1score = 0.9117787440986737
12/21/2023 12:54:57 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:54:57 - INFO - utils.common - acc = 0.912975
12/21/2023 12:54:57 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:54:57 - INFO - utils.common - precision = 0.9123194919322282
12/21/2023 12:54:57 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:54:57 - INFO - utils.common - result = {'f1score': 0.9117787440986737, 'acc': 0.912975, 'precision': 0.9123194919322282, 'recall': 0.9114315564946883}
12/21/2023 12:54:57 - INFO - __main__ - Epoch:7, Train Accuracy:0.912975, f1:0.9117787440986737

Epoch: [7][0/313]	
Epoch: [7][100/313]	
Epoch: [7][200/313]	
Epoch: [7][300/313]	
12/21/2023 12:55:20 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:55:20 - INFO - utils.common - F1score = 0.9611962584047797
12/21/2023 12:55:20 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:55:20 - INFO - utils.common - acc = 0.96155
12/21/2023 12:55:20 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:55:21 - INFO - utils.common - precision = 0.9624627791203988
12/21/2023 12:55:21 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:55:21 - INFO - utils.common - result = {'f1score': 0.9611962584047797, 'acc': 0.96155, 'precision': 0.9624627791203988, 'recall': 0.9601866798803703}
12/21/2023 12:55:21 - INFO - __main__ - Epoch:7, Val Accuracy:0.96155, f1:0.9611962584047797

12/21/2023 12:55:21 - INFO - __main__ - lr:0.0001036736311836454
12/21/2023 12:55:21 - INFO - __main__ - ==========Epoch:8==========
Save best weights
12/21/2023 12:57:26 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:57:26 - INFO - utils.common - F1score = 0.9144094832688856
12/21/2023 12:57:26 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:57:26 - INFO - utils.common - acc = 0.91565
12/21/2023 12:57:26 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:57:27 - INFO - utils.common - precision = 0.9150402910842134
12/21/2023 12:57:27 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:57:27 - INFO - utils.common - result = {'f1score': 0.9144094832688856, 'acc': 0.91565, 'precision': 0.9150402910842134, 'recall': 0.9139796259545461}
12/21/2023 12:57:27 - INFO - __main__ - Epoch:8, Train Accuracy:0.91565, f1:0.9144094832688856

Epoch: [8][0/313]	
Epoch: [8][100/313]	
Epoch: [8][200/313]	
Epoch: [8][300/313]	
12/21/2023 12:57:52 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:57:52 - INFO - utils.common - F1score = 0.961837220800454
12/21/2023 12:57:52 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:57:52 - INFO - utils.common - acc = 0.96215
12/21/2023 12:57:52 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:57:52 - INFO - utils.common - precision = 0.9630048066810151
12/21/2023 12:57:52 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:57:53 - INFO - utils.common - result = {'f1score': 0.961837220800454, 'acc': 0.96215, 'precision': 0.9630048066810151, 'recall': 0.9610007863302202}
12/21/2023 12:57:53 - INFO - __main__ - Epoch:8, Val Accuracy:0.96215, f1:0.961837220800454

12/21/2023 12:57:53 - INFO - __main__ - lr:2.8683631183645395e-05
12/21/2023 12:57:53 - INFO - __main__ - ==========Epoch:9==========
Save best weights
12/21/2023 12:59:58 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:59:58 - INFO - utils.common - F1score = 0.9166946102081882
12/21/2023 12:59:58 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:59:58 - INFO - utils.common - acc = 0.9179
12/21/2023 12:59:58 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:59:58 - INFO - utils.common - precision = 0.9171274098948712
12/21/2023 12:59:58 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:59:59 - INFO - utils.common - result = {'f1score': 0.9166946102081882, 'acc': 0.9179, 'precision': 0.9171274098948712, 'recall': 0.9164775422656923}
12/21/2023 12:59:59 - INFO - __main__ - Epoch:9, Train Accuracy:0.9179, f1:0.9166946102081882

Epoch: [9][0/313]	
Epoch: [9][100/313]	
Epoch: [9][200/313]	
Epoch: [9][300/313]	
12/21/2023 13:00:14 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 13:00:14 - INFO - utils.common - F1score = 0.9622876093240984
12/21/2023 13:00:14 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 13:00:14 - INFO - utils.common - acc = 0.9626
12/21/2023 13:00:14 - INFO - utils.common - 计算 precision ing...
12/21/2023 13:00:14 - INFO - utils.common - precision = 0.963221225733806
12/21/2023 13:00:14 - INFO - utils.common - 计算 recall ing...
12/21/2023 13:00:14 - INFO - utils.common - result = {'f1score': 0.9622876093240984, 'acc': 0.9626, 'precision': 0.963221225733806, 'recall': 0.9615796172570507}
12/21/2023 13:00:14 - INFO - __main__ - Epoch:9, Val Accuracy:0.9626, f1:0.9622876093240984

12/21/2023 13:00:14 - INFO - __main__ - lr:0.0003
Save best weights
Test
12/21/2023 13:00:22 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 13:00:22 - INFO - utils.common - F1score = 0.9107123765544374
12/21/2023 13:00:22 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 13:00:22 - INFO - utils.common - acc = 0.9370473537604457
12/21/2023 13:00:22 - INFO - utils.common - 计算 precision ing...
12/21/2023 13:00:22 - INFO - utils.common - precision = 0.919662078104921
12/21/2023 13:00:22 - INFO - utils.common - 计算 recall ing...
12/21/2023 13:00:22 - INFO - utils.common - result = {'f1score': 0.9107123765544374, 'acc': 0.9370473537604457, 'precision': 0.919662078104921, 'recall': 0.9100158736566131}
12/21/2023 13:00:22 - INFO - __main__ - test_f1:0.9107123765544374, test_acc:0.9370473537604457, test_precision:0.919662078104921, test_recall:0.9100158736566131
12/21/2023 13:00:22 - INFO - __main__ - Finish fine-turning...
