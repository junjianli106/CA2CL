nohup: ignoring input
12/21/2023 12:35:58 - INFO - __main__ - 设置 seed 为:  3
12/21/2023 12:35:58 - INFO - __main__ - Start fine-turning...
12/21/2023 12:36:04 - INFO - __main__ - ==========Epoch:0==========
=> no checkpoint found at '
12/21/2023 12:38:04 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:38:05 - INFO - utils.common - F1score = 0.6366776669523089
12/21/2023 12:38:05 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:38:05 - INFO - utils.common - acc = 0.64515
12/21/2023 12:38:05 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:38:05 - INFO - utils.common - precision = 0.6545520321605699
12/21/2023 12:38:05 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:38:05 - INFO - utils.common - result = {'f1score': 0.6366776669523089, 'acc': 0.64515, 'precision': 0.6545520321605699, 'recall': 0.6353071775364916}
12/21/2023 12:38:05 - INFO - __main__ - Epoch:0, Train Accuracy:0.64515, f1:0.6366776669523089

Epoch: [0][0/313]	
Epoch: [0][100/313]	
Epoch: [0][200/313]	
Epoch: [0][300/313]	
12/21/2023 12:38:28 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:38:28 - INFO - utils.common - F1score = 0.8829599700121027
12/21/2023 12:38:28 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:38:28 - INFO - utils.common - acc = 0.88535
12/21/2023 12:38:28 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:38:28 - INFO - utils.common - precision = 0.8951148879736106
12/21/2023 12:38:28 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:38:28 - INFO - utils.common - result = {'f1score': 0.8829599700121027, 'acc': 0.88535, 'precision': 0.8951148879736106, 'recall': 0.878132871535675}
12/21/2023 12:38:28 - INFO - __main__ - Epoch:0, Val Accuracy:0.88535, f1:0.8829599700121027

12/21/2023 12:38:28 - INFO - __main__ - lr:0.00027135636881635457
12/21/2023 12:38:28 - INFO - __main__ - ==========Epoch:1==========
Save best weights
12/21/2023 12:40:27 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:40:27 - INFO - utils.common - F1score = 0.8426544281297114
12/21/2023 12:40:27 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:40:28 - INFO - utils.common - acc = 0.845075
12/21/2023 12:40:28 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:40:28 - INFO - utils.common - precision = 0.8444185428834227
12/21/2023 12:40:28 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:40:28 - INFO - utils.common - result = {'f1score': 0.8426544281297114, 'acc': 0.845075, 'precision': 0.8444185428834227, 'recall': 0.841970073413147}
12/21/2023 12:40:28 - INFO - __main__ - Epoch:1, Train Accuracy:0.845075, f1:0.8426544281297114

Epoch: [1][0/313]	
Epoch: [1][100/313]	
Epoch: [1][200/313]	
Epoch: [1][300/313]	
12/21/2023 12:40:53 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:40:53 - INFO - utils.common - F1score = 0.9273361808338318
12/21/2023 12:40:53 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:40:53 - INFO - utils.common - acc = 0.9278
12/21/2023 12:40:53 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:40:53 - INFO - utils.common - precision = 0.9308570074382096
12/21/2023 12:40:53 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:40:53 - INFO - utils.common - result = {'f1score': 0.9273361808338318, 'acc': 0.9278, 'precision': 0.9308570074382096, 'recall': 0.9251428455217512}
12/21/2023 12:40:53 - INFO - __main__ - Epoch:1, Val Accuracy:0.9278, f1:0.9273361808338318

12/21/2023 12:40:53 - INFO - __main__ - lr:0.0001963663688163546
12/21/2023 12:40:53 - INFO - __main__ - ==========Epoch:2==========
Save best weights
12/21/2023 12:43:00 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:43:00 - INFO - utils.common - F1score = 0.8718820363668839
12/21/2023 12:43:00 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:43:00 - INFO - utils.common - acc = 0.873825
12/21/2023 12:43:00 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:43:01 - INFO - utils.common - precision = 0.8733399740038981
12/21/2023 12:43:01 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:43:01 - INFO - utils.common - result = {'f1score': 0.8718820363668839, 'acc': 0.873825, 'precision': 0.8733399740038981, 'recall': 0.8710700625672104}
12/21/2023 12:43:01 - INFO - __main__ - Epoch:2, Train Accuracy:0.873825, f1:0.8718820363668839

Epoch: [2][0/313]	
Epoch: [2][100/313]	
Epoch: [2][200/313]	
Epoch: [2][300/313]	
12/21/2023 12:43:25 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:43:26 - INFO - utils.common - F1score = 0.9365757109775014
12/21/2023 12:43:26 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:43:26 - INFO - utils.common - acc = 0.93705
12/21/2023 12:43:26 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:43:26 - INFO - utils.common - precision = 0.9394666658783151
12/21/2023 12:43:26 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:43:26 - INFO - utils.common - result = {'f1score': 0.9365757109775014, 'acc': 0.93705, 'precision': 0.9394666658783151, 'recall': 0.9345742216427083}
12/21/2023 12:43:26 - INFO - __main__ - Epoch:2, Val Accuracy:0.93705, f1:0.9365757109775014

12/21/2023 12:43:26 - INFO - __main__ - lr:0.0001036736311836454
12/21/2023 12:43:26 - INFO - __main__ - ==========Epoch:3==========
Save best weights
12/21/2023 12:45:31 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:45:32 - INFO - utils.common - F1score = 0.8830385890019108
12/21/2023 12:45:32 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:45:32 - INFO - utils.common - acc = 0.88475
12/21/2023 12:45:32 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:45:32 - INFO - utils.common - precision = 0.8842442022314132
12/21/2023 12:45:32 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:45:32 - INFO - utils.common - result = {'f1score': 0.8830385890019108, 'acc': 0.88475, 'precision': 0.8842442022314132, 'recall': 0.8822580812122855}
12/21/2023 12:45:32 - INFO - __main__ - Epoch:3, Train Accuracy:0.88475, f1:0.8830385890019108

Epoch: [3][0/313]	
Epoch: [3][100/313]	
Epoch: [3][200/313]	
Epoch: [3][300/313]	
12/21/2023 12:45:59 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:45:59 - INFO - utils.common - F1score = 0.9408013062338885
12/21/2023 12:45:59 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:45:59 - INFO - utils.common - acc = 0.94125
12/21/2023 12:45:59 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:45:59 - INFO - utils.common - precision = 0.9439050040866748
12/21/2023 12:45:59 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:45:59 - INFO - utils.common - result = {'f1score': 0.9408013062338885, 'acc': 0.94125, 'precision': 0.9439050040866748, 'recall': 0.9385188089813842}
12/21/2023 12:45:59 - INFO - __main__ - Epoch:3, Val Accuracy:0.94125, f1:0.9408013062338885

12/21/2023 12:45:59 - INFO - __main__ - lr:2.8683631183645395e-05
12/21/2023 12:45:59 - INFO - __main__ - ==========Epoch:4==========
Save best weights
12/21/2023 12:48:02 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:48:02 - INFO - utils.common - F1score = 0.8890933738635768
12/21/2023 12:48:02 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:48:02 - INFO - utils.common - acc = 0.890675
12/21/2023 12:48:02 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:48:03 - INFO - utils.common - precision = 0.8898269942267493
12/21/2023 12:48:03 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:48:03 - INFO - utils.common - result = {'f1score': 0.8890933738635768, 'acc': 0.890675, 'precision': 0.8898269942267493, 'recall': 0.8886477275494529}
12/21/2023 12:48:03 - INFO - __main__ - Epoch:4, Train Accuracy:0.890675, f1:0.8890933738635768

Epoch: [4][0/313]	
Epoch: [4][100/313]	
Epoch: [4][200/313]	
Epoch: [4][300/313]	
12/21/2023 12:48:27 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:48:27 - INFO - utils.common - F1score = 0.9429116541932109
12/21/2023 12:48:27 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:48:27 - INFO - utils.common - acc = 0.9434
12/21/2023 12:48:27 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:48:27 - INFO - utils.common - precision = 0.9450482763893459
12/21/2023 12:48:27 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:48:27 - INFO - utils.common - result = {'f1score': 0.9429116541932109, 'acc': 0.9434, 'precision': 0.9450482763893459, 'recall': 0.9413443886372908}
12/21/2023 12:48:27 - INFO - __main__ - Epoch:4, Val Accuracy:0.9434, f1:0.9429116541932109

12/21/2023 12:48:27 - INFO - __main__ - lr:0.0003
12/21/2023 12:48:27 - INFO - __main__ - ==========Epoch:5==========
Save best weights
12/21/2023 12:50:34 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:50:34 - INFO - utils.common - F1score = 0.8928400483209386
12/21/2023 12:50:34 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:50:35 - INFO - utils.common - acc = 0.894225
12/21/2023 12:50:35 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:50:35 - INFO - utils.common - precision = 0.8933977650608421
12/21/2023 12:50:35 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:50:35 - INFO - utils.common - result = {'f1score': 0.8928400483209386, 'acc': 0.894225, 'precision': 0.8933977650608421, 'recall': 0.8925013401588663}
12/21/2023 12:50:35 - INFO - __main__ - Epoch:5, Train Accuracy:0.894225, f1:0.8928400483209386

Epoch: [5][0/313]	
Epoch: [5][100/313]	
Epoch: [5][200/313]	
Epoch: [5][300/313]	
12/21/2023 12:50:54 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:50:54 - INFO - utils.common - F1score = 0.9514588285613499
12/21/2023 12:50:54 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:50:54 - INFO - utils.common - acc = 0.9519
12/21/2023 12:50:54 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:50:54 - INFO - utils.common - precision = 0.9526973946980734
12/21/2023 12:50:54 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:50:54 - INFO - utils.common - result = {'f1score': 0.9514588285613499, 'acc': 0.9519, 'precision': 0.9526973946980734, 'recall': 0.9504886101547907}
12/21/2023 12:50:54 - INFO - __main__ - Epoch:5, Val Accuracy:0.9519, f1:0.9514588285613499

12/21/2023 12:50:54 - INFO - __main__ - lr:0.00027135636881635457
12/21/2023 12:50:55 - INFO - __main__ - ==========Epoch:6==========
Save best weights
12/21/2023 12:53:06 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:53:07 - INFO - utils.common - F1score = 0.9050632140746999
12/21/2023 12:53:07 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:53:07 - INFO - utils.common - acc = 0.906325
12/21/2023 12:53:07 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:53:07 - INFO - utils.common - precision = 0.9057947330117712
12/21/2023 12:53:07 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:53:07 - INFO - utils.common - result = {'f1score': 0.9050632140746999, 'acc': 0.906325, 'precision': 0.9057947330117712, 'recall': 0.9045343670949256}
12/21/2023 12:53:07 - INFO - __main__ - Epoch:6, Train Accuracy:0.906325, f1:0.9050632140746999

Epoch: [6][0/313]	
Epoch: [6][100/313]	
Epoch: [6][200/313]	
Epoch: [6][300/313]	
12/21/2023 12:53:32 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:53:32 - INFO - utils.common - F1score = 0.9559296954879417
12/21/2023 12:53:32 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:53:32 - INFO - utils.common - acc = 0.9563
12/21/2023 12:53:32 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:53:32 - INFO - utils.common - precision = 0.9569007055343565
12/21/2023 12:53:32 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:53:32 - INFO - utils.common - result = {'f1score': 0.9559296954879417, 'acc': 0.9563, 'precision': 0.9569007055343565, 'recall': 0.9551665676328605}
12/21/2023 12:53:32 - INFO - __main__ - Epoch:6, Val Accuracy:0.9563, f1:0.9559296954879417

12/21/2023 12:53:32 - INFO - __main__ - lr:0.0001963663688163546
12/21/2023 12:53:32 - INFO - __main__ - ==========Epoch:7==========
Save best weights
12/21/2023 12:55:35 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:55:35 - INFO - utils.common - F1score = 0.9103025810694978
12/21/2023 12:55:35 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:55:35 - INFO - utils.common - acc = 0.911675
12/21/2023 12:55:35 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:55:36 - INFO - utils.common - precision = 0.9106509294340349
12/21/2023 12:55:36 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:55:36 - INFO - utils.common - result = {'f1score': 0.9103025810694978, 'acc': 0.911675, 'precision': 0.9106509294340349, 'recall': 0.9100474648883607}
12/21/2023 12:55:36 - INFO - __main__ - Epoch:7, Train Accuracy:0.911675, f1:0.9103025810694978

Epoch: [7][0/313]	
Epoch: [7][100/313]	
Epoch: [7][200/313]	
Epoch: [7][300/313]	
12/21/2023 12:56:00 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:56:00 - INFO - utils.common - F1score = 0.9580484277113379
12/21/2023 12:56:00 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:56:00 - INFO - utils.common - acc = 0.95825
12/21/2023 12:56:00 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:56:00 - INFO - utils.common - precision = 0.9589677495077491
12/21/2023 12:56:00 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:56:00 - INFO - utils.common - result = {'f1score': 0.9580484277113379, 'acc': 0.95825, 'precision': 0.9589677495077491, 'recall': 0.957306416766079}
12/21/2023 12:56:00 - INFO - __main__ - Epoch:7, Val Accuracy:0.95825, f1:0.9580484277113379

12/21/2023 12:56:00 - INFO - __main__ - lr:0.0001036736311836454
12/21/2023 12:56:00 - INFO - __main__ - ==========Epoch:8==========
Save best weights
12/21/2023 12:58:07 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:58:07 - INFO - utils.common - F1score = 0.9149845035359316
12/21/2023 12:58:07 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:58:07 - INFO - utils.common - acc = 0.916375
12/21/2023 12:58:07 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:58:07 - INFO - utils.common - precision = 0.9157482043454662
12/21/2023 12:58:07 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:58:08 - INFO - utils.common - result = {'f1score': 0.9149845035359316, 'acc': 0.916375, 'precision': 0.9157482043454662, 'recall': 0.9144488924423517}
12/21/2023 12:58:08 - INFO - __main__ - Epoch:8, Train Accuracy:0.916375, f1:0.9149845035359316

Epoch: [8][0/313]	
Epoch: [8][100/313]	
Epoch: [8][200/313]	
Epoch: [8][300/313]	
12/21/2023 12:58:30 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 12:58:30 - INFO - utils.common - F1score = 0.9586223145656378
12/21/2023 12:58:30 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 12:58:30 - INFO - utils.common - acc = 0.95885
12/21/2023 12:58:30 - INFO - utils.common - 计算 precision ing...
12/21/2023 12:58:30 - INFO - utils.common - precision = 0.9600732121284187
12/21/2023 12:58:30 - INFO - utils.common - 计算 recall ing...
12/21/2023 12:58:30 - INFO - utils.common - result = {'f1score': 0.9586223145656378, 'acc': 0.95885, 'precision': 0.9600732121284187, 'recall': 0.9574927058916847}
12/21/2023 12:58:30 - INFO - __main__ - Epoch:8, Val Accuracy:0.95885, f1:0.9586223145656378

12/21/2023 12:58:30 - INFO - __main__ - lr:2.8683631183645395e-05
12/21/2023 12:58:30 - INFO - __main__ - ==========Epoch:9==========
Save best weights
12/21/2023 13:00:31 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 13:00:31 - INFO - utils.common - F1score = 0.9154539601179077
12/21/2023 13:00:31 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 13:00:31 - INFO - utils.common - acc = 0.91695
12/21/2023 13:00:31 - INFO - utils.common - 计算 precision ing...
12/21/2023 13:00:31 - INFO - utils.common - precision = 0.9157766192063684
12/21/2023 13:00:31 - INFO - utils.common - 计算 recall ing...
12/21/2023 13:00:31 - INFO - utils.common - result = {'f1score': 0.9154539601179077, 'acc': 0.91695, 'precision': 0.9157766192063684, 'recall': 0.9152422185212031}
12/21/2023 13:00:31 - INFO - __main__ - Epoch:9, Train Accuracy:0.91695, f1:0.9154539601179077

Epoch: [9][0/313]	
Epoch: [9][100/313]	
Epoch: [9][200/313]	
Epoch: [9][300/313]	
12/21/2023 13:00:46 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 13:00:46 - INFO - utils.common - F1score = 0.9597891534145803
12/21/2023 13:00:46 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 13:00:46 - INFO - utils.common - acc = 0.96
12/21/2023 13:00:46 - INFO - utils.common - 计算 precision ing...
12/21/2023 13:00:46 - INFO - utils.common - precision = 0.9603747619527367
12/21/2023 13:00:46 - INFO - utils.common - 计算 recall ing...
12/21/2023 13:00:46 - INFO - utils.common - result = {'f1score': 0.9597891534145803, 'acc': 0.96, 'precision': 0.9603747619527367, 'recall': 0.9593204386481611}
12/21/2023 13:00:46 - INFO - __main__ - Epoch:9, Val Accuracy:0.96, f1:0.9597891534145803

12/21/2023 13:00:46 - INFO - __main__ - lr:0.0003
Save best weights
Test
12/21/2023 13:00:52 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 13:00:52 - INFO - utils.common - F1score = 0.907709924815721
12/21/2023 13:00:52 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 13:00:52 - INFO - utils.common - acc = 0.9344011142061281
12/21/2023 13:00:52 - INFO - utils.common - 计算 precision ing...
12/21/2023 13:00:52 - INFO - utils.common - precision = 0.9137496324527253
12/21/2023 13:00:52 - INFO - utils.common - 计算 recall ing...
12/21/2023 13:00:52 - INFO - utils.common - result = {'f1score': 0.907709924815721, 'acc': 0.9344011142061281, 'precision': 0.9137496324527253, 'recall': 0.9061938126912155}
12/21/2023 13:00:52 - INFO - __main__ - test_f1:0.907709924815721, test_acc:0.9344011142061281, test_precision:0.9137496324527253, test_recall:0.9061938126912155
12/21/2023 13:00:52 - INFO - __main__ - Finish fine-turning...
