nohup: ignoring input
12/21/2023 14:05:26 - INFO - __main__ - 设置 seed 为:  2
12/21/2023 14:05:26 - INFO - __main__ - Start fine-turning...
12/21/2023 14:05:33 - INFO - __main__ - ==========Epoch:0==========
=> no checkpoint found at '
12/21/2023 14:07:21 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:07:21 - INFO - utils.common - F1score = 0.2879506534524921
12/21/2023 14:07:21 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:07:21 - INFO - utils.common - acc = 0.354625
12/21/2023 14:07:21 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:07:21 - INFO - utils.common - precision = 0.3332325464085824
12/21/2023 14:07:21 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:07:21 - INFO - utils.common - result = {'f1score': 0.2879506534524921, 'acc': 0.354625, 'precision': 0.3332325464085824, 'recall': 0.33929003631848303}
12/21/2023 14:07:21 - INFO - __main__ - Epoch:0, Train Accuracy:0.354625, f1:0.2879506534524921

Epoch: [0][0/313]	
Epoch: [0][100/313]	
Epoch: [0][200/313]	
Epoch: [0][300/313]	
12/21/2023 14:07:42 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:07:42 - INFO - utils.common - F1score = 0.4979390472431821
12/21/2023 14:07:42 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:07:42 - INFO - utils.common - acc = 0.54375
12/21/2023 14:07:42 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:07:42 - INFO - utils.common - precision = 0.5289138690409697
12/21/2023 14:07:42 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:07:42 - INFO - utils.common - result = {'f1score': 0.4979390472431821, 'acc': 0.54375, 'precision': 0.5289138690409697, 'recall': 0.5232757948272508}
12/21/2023 14:07:42 - INFO - __main__ - Epoch:0, Val Accuracy:0.54375, f1:0.4979390472431821

12/21/2023 14:07:42 - INFO - __main__ - lr:0.00027135636881635457
12/21/2023 14:07:42 - INFO - __main__ - ==========Epoch:1==========
Save best weights
12/21/2023 14:09:37 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:09:37 - INFO - utils.common - F1score = 0.4514053906587314
12/21/2023 14:09:37 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:09:37 - INFO - utils.common - acc = 0.4989
12/21/2023 14:09:37 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:09:37 - INFO - utils.common - precision = 0.4852003794546716
12/21/2023 14:09:37 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:09:37 - INFO - utils.common - result = {'f1score': 0.4514053906587314, 'acc': 0.4989, 'precision': 0.4852003794546716, 'recall': 0.4851259425119578}
12/21/2023 14:09:37 - INFO - __main__ - Epoch:1, Train Accuracy:0.4989, f1:0.4514053906587314

Epoch: [1][0/313]	
Epoch: [1][100/313]	
Epoch: [1][200/313]	
Epoch: [1][300/313]	
12/21/2023 14:09:56 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:09:57 - INFO - utils.common - F1score = 0.5350480077807579
12/21/2023 14:09:57 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:09:57 - INFO - utils.common - acc = 0.5746
12/21/2023 14:09:57 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:09:57 - INFO - utils.common - precision = 0.6201368988716696
12/21/2023 14:09:57 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:09:57 - INFO - utils.common - result = {'f1score': 0.5350480077807579, 'acc': 0.5746, 'precision': 0.6201368988716696, 'recall': 0.5639156586301859}
12/21/2023 14:09:57 - INFO - __main__ - Epoch:1, Val Accuracy:0.5746, f1:0.5350480077807579

12/21/2023 14:09:57 - INFO - __main__ - lr:0.0001963663688163546
12/21/2023 14:09:57 - INFO - __main__ - ==========Epoch:2==========
Save best weights
12/21/2023 14:11:44 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:11:44 - INFO - utils.common - F1score = 0.4987213159286188
12/21/2023 14:11:44 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:11:44 - INFO - utils.common - acc = 0.531925
12/21/2023 14:11:44 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:11:44 - INFO - utils.common - precision = 0.5192380530212708
12/21/2023 14:11:44 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:11:44 - INFO - utils.common - result = {'f1score': 0.4987213159286188, 'acc': 0.531925, 'precision': 0.5192380530212708, 'recall': 0.5223568633379789}
12/21/2023 14:11:44 - INFO - __main__ - Epoch:2, Train Accuracy:0.531925, f1:0.4987213159286188

Epoch: [2][0/313]	
Epoch: [2][100/313]	
Epoch: [2][200/313]	
Epoch: [2][300/313]	
12/21/2023 14:12:05 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:12:05 - INFO - utils.common - F1score = 0.5807566273847868
12/21/2023 14:12:05 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:12:05 - INFO - utils.common - acc = 0.6013
12/21/2023 14:12:05 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:12:05 - INFO - utils.common - precision = 0.6314253634598952
12/21/2023 14:12:05 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:12:05 - INFO - utils.common - result = {'f1score': 0.5807566273847868, 'acc': 0.6013, 'precision': 0.6314253634598952, 'recall': 0.5986107795807221}
12/21/2023 14:12:05 - INFO - __main__ - Epoch:2, Val Accuracy:0.6013, f1:0.5807566273847868

12/21/2023 14:12:05 - INFO - __main__ - lr:0.0001036736311836454
12/21/2023 14:12:05 - INFO - __main__ - ==========Epoch:3==========
Save best weights
12/21/2023 14:13:32 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:13:32 - INFO - utils.common - F1score = 0.5236117744252092
12/21/2023 14:13:32 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:13:32 - INFO - utils.common - acc = 0.5515
12/21/2023 14:13:32 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:13:32 - INFO - utils.common - precision = 0.5445353318455844
12/21/2023 14:13:32 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:13:32 - INFO - utils.common - result = {'f1score': 0.5236117744252092, 'acc': 0.5515, 'precision': 0.5445353318455844, 'recall': 0.542632296190253}
12/21/2023 14:13:32 - INFO - __main__ - Epoch:3, Train Accuracy:0.5515, f1:0.5236117744252092

Epoch: [3][0/313]	
Epoch: [3][100/313]	
Epoch: [3][200/313]	
Epoch: [3][300/313]	
12/21/2023 14:13:49 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:13:49 - INFO - utils.common - F1score = 0.5975159871049173
12/21/2023 14:13:49 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:13:49 - INFO - utils.common - acc = 0.623
12/21/2023 14:13:49 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:13:49 - INFO - utils.common - precision = 0.6609949058461885
12/21/2023 14:13:49 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:13:49 - INFO - utils.common - result = {'f1score': 0.5975159871049173, 'acc': 0.623, 'precision': 0.6609949058461885, 'recall': 0.6163101175854976}
12/21/2023 14:13:49 - INFO - __main__ - Epoch:3, Val Accuracy:0.623, f1:0.5975159871049173

12/21/2023 14:13:49 - INFO - __main__ - lr:2.8683631183645395e-05
12/21/2023 14:13:49 - INFO - __main__ - ==========Epoch:4==========
Save best weights
12/21/2023 14:15:57 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:15:57 - INFO - utils.common - F1score = 0.5307542785092068
12/21/2023 14:15:57 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:15:57 - INFO - utils.common - acc = 0.55645
12/21/2023 14:15:57 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:15:57 - INFO - utils.common - precision = 0.5496628675827955
12/21/2023 14:15:57 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:15:57 - INFO - utils.common - result = {'f1score': 0.5307542785092068, 'acc': 0.55645, 'precision': 0.5496628675827955, 'recall': 0.5484536799993164}
12/21/2023 14:15:57 - INFO - __main__ - Epoch:4, Train Accuracy:0.55645, f1:0.5307542785092068

Epoch: [4][0/313]	
Epoch: [4][100/313]	
Epoch: [4][200/313]	
Epoch: [4][300/313]	
12/21/2023 14:16:14 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:16:15 - INFO - utils.common - F1score = 0.6073063481555013
12/21/2023 14:16:15 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:16:15 - INFO - utils.common - acc = 0.6308
12/21/2023 14:16:15 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:16:15 - INFO - utils.common - precision = 0.6632119162356507
12/21/2023 14:16:15 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:16:15 - INFO - utils.common - result = {'f1score': 0.6073063481555013, 'acc': 0.6308, 'precision': 0.6632119162356507, 'recall': 0.6240828871737845}
12/21/2023 14:16:15 - INFO - __main__ - Epoch:4, Val Accuracy:0.6308, f1:0.6073063481555013

12/21/2023 14:16:15 - INFO - __main__ - lr:0.0003
12/21/2023 14:16:15 - INFO - __main__ - ==========Epoch:5==========
Save best weights
12/21/2023 14:18:23 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:18:23 - INFO - utils.common - F1score = 0.5460133999617431
12/21/2023 14:18:23 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:18:23 - INFO - utils.common - acc = 0.56655
12/21/2023 14:18:23 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:18:23 - INFO - utils.common - precision = 0.5607850853608007
12/21/2023 14:18:23 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:18:23 - INFO - utils.common - result = {'f1score': 0.5460133999617431, 'acc': 0.56655, 'precision': 0.5607850853608007, 'recall': 0.5597347217020273}
12/21/2023 14:18:23 - INFO - __main__ - Epoch:5, Train Accuracy:0.56655, f1:0.5460133999617431

Epoch: [5][0/313]	
Epoch: [5][100/313]	
Epoch: [5][200/313]	
Epoch: [5][300/313]	
12/21/2023 14:18:41 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:18:41 - INFO - utils.common - F1score = 0.5739004626842452
12/21/2023 14:18:41 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:18:41 - INFO - utils.common - acc = 0.6043
12/21/2023 14:18:41 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:18:41 - INFO - utils.common - precision = 0.6503365142779203
12/21/2023 14:18:41 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:18:41 - INFO - utils.common - result = {'f1score': 0.5739004626842452, 'acc': 0.6043, 'precision': 0.6503365142779203, 'recall': 0.5923836915345526}
12/21/2023 14:18:41 - INFO - __main__ - Epoch:5, Val Accuracy:0.6043, f1:0.5739004626842452

12/21/2023 14:18:41 - INFO - __main__ - lr:0.00027135636881635457
12/21/2023 14:18:41 - INFO - __main__ - ==========Epoch:6==========
early_st 4
12/21/2023 14:20:50 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:20:50 - INFO - utils.common - F1score = 0.5732242734183188
12/21/2023 14:20:50 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:20:50 - INFO - utils.common - acc = 0.5899
12/21/2023 14:20:50 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:20:51 - INFO - utils.common - precision = 0.5856235474969371
12/21/2023 14:20:51 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:20:51 - INFO - utils.common - result = {'f1score': 0.5732242734183188, 'acc': 0.5899, 'precision': 0.5856235474969371, 'recall': 0.5835701115374257}
12/21/2023 14:20:51 - INFO - __main__ - Epoch:6, Train Accuracy:0.5899, f1:0.5732242734183188

Epoch: [6][0/313]	
Epoch: [6][100/313]	
Epoch: [6][200/313]	
Epoch: [6][300/313]	
12/21/2023 14:21:09 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:21:09 - INFO - utils.common - F1score = 0.612262705053845
12/21/2023 14:21:09 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:21:09 - INFO - utils.common - acc = 0.6207
12/21/2023 14:21:09 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:21:09 - INFO - utils.common - precision = 0.6890661796981752
12/21/2023 14:21:09 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:21:09 - INFO - utils.common - result = {'f1score': 0.612262705053845, 'acc': 0.6207, 'precision': 0.6890661796981752, 'recall': 0.6188458565773223}
12/21/2023 14:21:09 - INFO - __main__ - Epoch:6, Val Accuracy:0.6207, f1:0.612262705053845

12/21/2023 14:21:09 - INFO - __main__ - lr:0.0001963663688163546
12/21/2023 14:21:09 - INFO - __main__ - ==========Epoch:7==========
early_st 3
12/21/2023 14:23:18 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:23:18 - INFO - utils.common - F1score = 0.5956255455939358
12/21/2023 14:23:18 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:23:18 - INFO - utils.common - acc = 0.61
12/21/2023 14:23:18 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:23:19 - INFO - utils.common - precision = 0.6059976763891942
12/21/2023 14:23:19 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:23:19 - INFO - utils.common - result = {'f1score': 0.5956255455939358, 'acc': 0.61, 'precision': 0.6059976763891942, 'recall': 0.6036419616763962}
12/21/2023 14:23:19 - INFO - __main__ - Epoch:7, Train Accuracy:0.61, f1:0.5956255455939358

Epoch: [7][0/313]	
Epoch: [7][100/313]	
Epoch: [7][200/313]	
Epoch: [7][300/313]	
12/21/2023 14:23:38 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:23:38 - INFO - utils.common - F1score = 0.605146542812046
12/21/2023 14:23:38 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:23:38 - INFO - utils.common - acc = 0.63625
12/21/2023 14:23:38 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:23:38 - INFO - utils.common - precision = 0.669372188683961
12/21/2023 14:23:38 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:23:38 - INFO - utils.common - result = {'f1score': 0.605146542812046, 'acc': 0.63625, 'precision': 0.669372188683961, 'recall': 0.6226679997401684}
12/21/2023 14:23:38 - INFO - __main__ - Epoch:7, Val Accuracy:0.63625, f1:0.605146542812046

12/21/2023 14:23:38 - INFO - __main__ - lr:0.0001036736311836454
12/21/2023 14:23:38 - INFO - __main__ - ==========Epoch:8==========
Save best weights
12/21/2023 14:25:45 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:25:45 - INFO - utils.common - F1score = 0.6136548631225167
12/21/2023 14:25:45 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:25:45 - INFO - utils.common - acc = 0.627225
12/21/2023 14:25:45 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:25:46 - INFO - utils.common - precision = 0.6238189742897743
12/21/2023 14:25:46 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:25:46 - INFO - utils.common - result = {'f1score': 0.6136548631225167, 'acc': 0.627225, 'precision': 0.6238189742897743, 'recall': 0.620348719161039}
12/21/2023 14:25:46 - INFO - __main__ - Epoch:8, Train Accuracy:0.627225, f1:0.6136548631225167

Epoch: [8][0/313]	
Epoch: [8][100/313]	
Epoch: [8][200/313]	
Epoch: [8][300/313]	
12/21/2023 14:26:05 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:26:05 - INFO - utils.common - F1score = 0.7084020628292349
12/21/2023 14:26:05 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:26:05 - INFO - utils.common - acc = 0.72825
12/21/2023 14:26:05 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:26:05 - INFO - utils.common - precision = 0.7462332146049567
12/21/2023 14:26:05 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:26:05 - INFO - utils.common - result = {'f1score': 0.7084020628292349, 'acc': 0.72825, 'precision': 0.7462332146049567, 'recall': 0.7147909352796891}
12/21/2023 14:26:05 - INFO - __main__ - Epoch:8, Val Accuracy:0.72825, f1:0.7084020628292349

12/21/2023 14:26:05 - INFO - __main__ - lr:2.8683631183645395e-05
12/21/2023 14:26:05 - INFO - __main__ - ==========Epoch:9==========
Save best weights
12/21/2023 14:28:15 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:28:15 - INFO - utils.common - F1score = 0.6262052996248566
12/21/2023 14:28:15 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:28:15 - INFO - utils.common - acc = 0.638225
12/21/2023 14:28:15 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:28:15 - INFO - utils.common - precision = 0.6367076772488325
12/21/2023 14:28:15 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:28:15 - INFO - utils.common - result = {'f1score': 0.6262052996248566, 'acc': 0.638225, 'precision': 0.6367076772488325, 'recall': 0.6313699993304482}
12/21/2023 14:28:15 - INFO - __main__ - Epoch:9, Train Accuracy:0.638225, f1:0.6262052996248566

Epoch: [9][0/313]	
Epoch: [9][100/313]	
Epoch: [9][200/313]	
Epoch: [9][300/313]	
12/21/2023 14:28:34 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:28:34 - INFO - utils.common - F1score = 0.6982315403284478
12/21/2023 14:28:34 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:28:34 - INFO - utils.common - acc = 0.71725
12/21/2023 14:28:34 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:28:34 - INFO - utils.common - precision = 0.7456393112125332
12/21/2023 14:28:34 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:28:34 - INFO - utils.common - result = {'f1score': 0.6982315403284478, 'acc': 0.71725, 'precision': 0.7456393112125332, 'recall': 0.7043334808593158}
12/21/2023 14:28:34 - INFO - __main__ - Epoch:9, Val Accuracy:0.71725, f1:0.6982315403284478

12/21/2023 14:28:34 - INFO - __main__ - lr:0.0003
early_st 4
Test
12/21/2023 14:28:40 - INFO - utils.common - 计算 f1 score ing...
12/21/2023 14:28:40 - INFO - utils.common - F1score = 0.7055581852870146
12/21/2023 14:28:40 - INFO - utils.common - 计算 accuracy ing...
12/21/2023 14:28:40 - INFO - utils.common - acc = 0.7654596100278551
12/21/2023 14:28:40 - INFO - utils.common - 计算 precision ing...
12/21/2023 14:28:40 - INFO - utils.common - precision = 0.7362449973751707
12/21/2023 14:28:40 - INFO - utils.common - 计算 recall ing...
12/21/2023 14:28:40 - INFO - utils.common - result = {'f1score': 0.7055581852870146, 'acc': 0.7654596100278551, 'precision': 0.7362449973751707, 'recall': 0.7368725329177724}
12/21/2023 14:28:40 - INFO - __main__ - test_f1:0.7055581852870146, test_acc:0.7654596100278551, test_precision:0.7362449973751707, test_recall:0.7368725329177724
12/21/2023 14:28:40 - INFO - __main__ - Finish fine-turning...
